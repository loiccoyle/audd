#!/bin/sh

# Small script to run audd, with notifications.
# Requires audd, jq, dunstify (optional).

type audd > /dev/null || err_msg_exit "'audd' not found."
type jq > /dev/null || err_msg_exit "'jq' not found."

TMP_DIR="/tmp/audd"
ARTWORK_FILE="$TMP_DIR/artwork.jpeg"

# set the source to the monitor of the current output sink
SOURCE="$(ffmpeg -sinks pulse 2>/dev/null | grep '\*' | cut -d' ' -f2).monitor"
if ! ffmpeg -sources pulse 2> /dev/null | grep -q "$SOURCE" ;then
    # exit if doesn't exist
    echo "Source monitor \"$SOURCE\" not found." >&2
    exit 1
fi

notify-send -i "audio-input-microphone" -t 5000 "AudD" "Recording audio for 5s."
RESPONSE="$(audd -t 5 \
    -r "apple_music,spotify" \
    -s "$SOURCE")"

if [ "$(echo "$RESPONSE" | jq -r ".status")" = "error" ]; then
    notify-send -i "dialog-error" "AudD - API error" "$(echo "$RESPONSE" | jq -r ".error.error_message")"
    exit 2
fi
if [ "$(echo "$RESPONSE" | jq -r ".status")" = "success" ] && \
    [ "$(echo "$RESPONSE" | jq -r ".result")" = "null" ]; then
    notify-send -i "music" "AudD" "Failed to identify song."
    exit
fi

ARTIST="$(echo "$RESPONSE" | jq -r ".result.artist")"
TITLE="$(echo "$RESPONSE" | jq -r ".result.title")"
# ALBUM="$(echo "$RESPONSE" | jq -r ".result.album")"

# apple music artwork
# ARTWORK_WIDTH="$(echo "$RESPONSE" | jq -r ".result.apple_music.artwork.width")"
# ARTWORK_HEIGHT="$(echo "$RESPONSE" | jq -r ".result.apple_music.artwork.height")"
# LINK_ARTWORK="$(echo "$RESPONSE" | jq -r ".result.apple_music.artwork.url")"
# LINK_ARTWORK="${LINK_ARTWORK/\{w\}/$ARTWORK_WIDTH}"
# LINK_ARTWORK="${LINK_ARTWORK/\{h\}/$ARTWORK_HEIGHT}"

# spotify artwork
LINK_ARTWORK="$(echo "$RESPONSE" | jq -r ".result.spotify.album.images[0].url")"

curl --silent "$LINK_ARTWORK" -o "$ARTWORK_FILE" > /dev/null 2>&1

if type dunstify > /dev/null; then
    case "$(dunstify -i "$ARTWORK_FILE" \
        --action="listn,listn" \
        --action="apple music,apple music" \
        --action="spotify,spotify" \
        "$ARTIST" "$TITLE")" in
        "apple music")
            AM_LINK="$(echo "$RESPONSE" | jq -r ".result.apple_music.url")"
            xdg-open "${AM_LINK}"
            ;;
        "spotify")
            SPOT_LINK="$(echo "$RESPONSE" | jq -r ".result.spotify.external_urls.spotify")"
            xdg-open "$SPOT_LINK"
            ;;
        "listn")
            LISTN_LINK="$(echo "$RESPONSE" | jq -r ".result.song_link")"
            xdg-open "$LISTN_LINK"
            ;;
    esac
else
    notify-send -i "$ARTWORK_FILE" "$ARTIST" "$TITLE"
fi
